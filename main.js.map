{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/elixir-list.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"h1{\\r\\n    font-size: 3em;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    color: black;\\r\\n    text-align: center;\\r\\n}\\r\\nlabel{\\r\\n    font-size: 1em;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    color: black;\\r\\n}\\r\\nh5{\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<html>\\n<head>\\n</head>\\n\\n<body>\\n\\n<div class= \\\"container\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-6\\\">\\n<!-- Title and Picture   -->\\n      <h1>Clash Royale Cards</h1>\\n        <img class=\\\"mx-auto d-block\\\" height=\\\"200\\\" width=\\\"300\\\" alt=\\\"Clash\\\" src=\\\"http://cdn.supercell.com/supercell.com/180514143929/all/themes/supercell/img/parallax/cr_logo.png\\\">\\n<br>\\n\\n<!--Form -->\\n        <div class= \\\"row justify-content-center\\\">\\n          <form class=\\\"form-horizontal\\\" [formGroup] = \\\"form\\\">\\n            <fieldset> \\n              <div class=\\\"form-group mx-auto text-center\\\">\\n                <label class=\\\"control-label text-center\\\" for=\\\"elixirCount\\\">Amount of Elixir</label>\\n                <div class=\\\" form-group col-md-12\\\">\\n                  <select class=\\\"form-control\\\" formControlName=\\\"elixirValue\\\" name=\\\"number\\\">\\n                    <option value=\\\"null\\\" disabled selected>Select Elixir Count</option>\\n                    <option *ngFor=\\\"let elixir of elixirCount\\\" value={{elixir}}>{{elixir}}</option>\\n                  </select> <br> \\n                  <button class= \\\"btn btn-primary d-block mx-auto\\\" type=\\\"button\\\" name=\\\"submit\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\" [disabled]=\\\"!form.valid\\\" (click)=\\\"onSubmit()\\\">Submit</button>\\n                </div>        \\n              </div>\\n            </fieldset>\\n          </form> \\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class= \\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Cards with {{this.form.value.elixirValue}} Elixir</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class = \\\"col-md-12\\\" style= \\\"border-bottom: 2px solid #000000\\\"  *ngFor = \\\"let card of elixirCardList\\\">\\n          <div class = \\\"row\\\">\\n            <div class = \\\"col\\\">\\n              <h5>{{card.name}}</h5><br>\\n              <ul>\\n                <li><h6>Rarity: {{card.rarity}}</h6></li>\\n                <li><h6>Type: {{card.type}}</h6></li>\\n                <li><h6>Description: {{card.description}}</h6></li>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n</body>\\n</html>\\n\\n\"","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ElixirList } from './elixir-list';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  readonly cardURL = 'https://www.clashapi.xyz/api/cards'\n  cardList: any;\n  card: any;\n  elixirCount = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];\n  elixir: any;\n  form;\n  elixirCardList = [];\n\n  constructor(private http: HttpClient){  \n    this.form = new FormGroup({\n    elixirValue: new FormControl()    \n    })\n  }\n  ngOnInit(){\n    this.getCards()\n  }\n\n  // This function gets all the cards from the clash royale url page\n  getCards(){\n    let options = {\n      headers:new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin':\"*\"\n      })\n    }\n    this.http.get(this.cardURL).subscribe(card => {\n      this.cardList = card;\n      console.log(this.cardList);\n    });\n  }\n\n  // // This function gets all the card data we need and push it to a new array\n  populateCardData(elixir){\n    this.elixirCardList = new Array<ElixirList>();\n    this.cardList.forEach(card=>{\n      if(card.elixirCost == elixir){\n        let cardList = new ElixirList;\n        cardList.card_name = card.card_name;\n        cardList.card_rarity = card.card_rarity;\n        cardList.card_type = card.card_type;\n        cardList.card_description = card.card_description;\n\n        this.elixirCardList.push(card);\n        }\n    });\n  }\n\n  // this function calls the getCardData function for when someone submits from the form\n  onSubmit(){\n    this.populateCardData(this.form.value.elixirValue);\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpModule, HttpClientModule, FormsModule, ReactiveFormsModule],\n  providers: [HttpClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class ElixirList{\r\n    card_name: string;\r\n    card_rarity: string;\r\n    card_type: string;\r\n    card_description: string;\r\n    elixirCost: number;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}