{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/elixir-list.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,qBAAqB,uBAAuB,kDAAkD,qBAAqB,2BAA2B,KAAK,UAAU,uBAAuB,kDAAkD,qBAAqB,KAAK,OAAO,2BAA2B,KAAK,C;;;;;;;;;;;ACAvS,2nCAA2nC,QAAQ,GAAG,QAAQ,gyBAAgyB,6BAA6B,4JAA4J,4SAA4S,WAAW,qEAAqE,aAAa,8CAA8C,WAAW,qDAAqD,kBAAkB,+U;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtkF;AACQ;AACC;AACiB;AACzB;AAO3C;IAUE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAR3B,YAAO,GAAG,oCAAoC;QAGvD,gBAAW,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAG5D,mBAAc,GAAG,EAAE,CAAC;QAGlB,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YAC1B,WAAW,EAAE,IAAI,0DAAW,EAAE;SAC7B,CAAC;IACJ,CAAC;IACD,+BAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE;IACjB,CAAC;IAED,kEAAkE;IAClE,+BAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,OAAO,GAAG;YACZ,OAAO,EAAC,IAAI,gEAAW,CAAC;gBACtB,cAAc,EAAE,kBAAkB;gBAClC,6BAA6B,EAAC,GAAG;aAClC,CAAC;SACH;QACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YACxC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6EAA6E;IAC7E,uCAAgB,GAAhB,UAAiB,MAAM;QAAvB,iBAaC;QAZC,IAAI,CAAC,cAAc,GAAG,IAAI,KAAK,EAAc,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAI;YACxB,EAAE,EAAC,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,EAAC;gBAC5B,IAAI,QAAQ,GAAG,IAAI,uDAAU,CAAC;gBAC9B,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBACpC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;gBACxC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBACpC,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBAElD,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sFAAsF;IACtF,+BAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IACrD,CAAC;IApDU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAW0B,+DAAU;OAVzB,YAAY,CAqDxB;IAAD,mBAAC;CAAA;AArDwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiC;AACjB;AACE;AACyB;AACrB;AACmB;AAQlE;IAAA;IAAyB,CAAC;IAAb,SAAS;QANrB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,2DAAY,CAAC;YAC5B,OAAO,EAAE,CAAC,uEAAa,EAAE,wDAAU,EAAE,qEAAgB,EAAE,0DAAW,EAAE,kEAAmB,CAAC;YACxF,SAAS,EAAE,CAAC,+DAAU,CAAC;YACvB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACbtB;AAAA;IAAA;IAMA,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACND;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"h1{\\r\\n    font-size: 3em;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    color: black;\\r\\n    text-align: center;\\r\\n}\\r\\nlabel{\\r\\n    font-size: 1em;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    color: black;\\r\\n}\\r\\nh5{\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<html>\\r\\n<head>\\r\\n</head>\\r\\n\\r\\n<body>\\r\\n\\r\\n<div class= \\\"container\\\">\\r\\n  <div class=\\\"jumbotron\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n<!-- Title and Picture   -->\\r\\n      <h1>Clash Royale Cards</h1>\\r\\n        <img class=\\\"mx-auto d-block\\\" height=\\\"200\\\" width=\\\"300\\\" alt=\\\"Clash\\\" src=\\\"http://cdn.supercell.com/supercell.com/180514143929/all/themes/supercell/img/parallax/cr_logo.png\\\">\\r\\n<br>\\r\\n\\r\\n<!--Form -->\\r\\n        <div class= \\\"row justify-content-center\\\">\\r\\n          <form class=\\\"form-horizontal\\\" [formGroup] = \\\"form\\\">\\r\\n            <fieldset> \\r\\n              <div class=\\\"form-group mx-auto text-center\\\">\\r\\n                <label class=\\\"control-label text-center\\\" for=\\\"elixirCount\\\">Amount of Elixir</label>\\r\\n                <div class=\\\" form-group col-md-12\\\">\\r\\n                  <select class=\\\"form-control\\\" formControlName=\\\"elixirValue\\\" name=\\\"number\\\">\\r\\n                    <option value=\\\"null\\\" disabled selected>Select Elixir Count</option>\\r\\n                    <option *ngFor=\\\"let elixir of elixirCount\\\" value={{elixir}}>{{elixir}}</option>\\r\\n                  </select> <br> \\r\\n                  <button class= \\\"btn btn-primary d-block mx-auto\\\" type=\\\"button\\\" name=\\\"submit\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\" [disabled]=\\\"!form.valid\\\" (click)=\\\"onSubmit()\\\">Submit</button>\\r\\n                </div>        \\r\\n              </div>\\r\\n            </fieldset>\\r\\n          </form> \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<!-- Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class= \\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Cards with {{this.form.value.elixirValue}} Elixir</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class = \\\"col-md-12\\\" style= \\\"border-bottom: 2px solid #000000\\\"  *ngFor = \\\"let card of elixirCardList\\\">\\r\\n          <div class = \\\"row\\\">\\r\\n            <div class = \\\"col\\\">\\r\\n              <h5>{{card.name}}</h5><br>\\r\\n              <ul>\\r\\n                <li><h6>Rarity: {{card.rarity}}</h6></li>\\r\\n                <li><h6>Type: {{card.type}}</h6></li>\\r\\n                <li><h6>Description: {{card.description}}</h6></li>\\r\\n              </ul>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n</body>\\r\\n</html>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ElixirList } from './elixir-list';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  readonly cardURL = 'https://www.clashapi.xyz/api/cards'\r\n  cardList: any;\r\n  card: any;\r\n  elixirCount = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];\r\n  elixir: any;\r\n  form;\r\n  elixirCardList = [];\r\n\r\n  constructor(private http: HttpClient){  \r\n    this.form = new FormGroup({\r\n    elixirValue: new FormControl()    \r\n    })\r\n  }\r\n  ngOnInit(){\r\n    this.getCards()\r\n  }\r\n\r\n  // This function gets all the cards from the clash royale url page\r\n  getCards(){\r\n    let options = {\r\n      headers:new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin':\"*\"\r\n      })\r\n    }\r\n    this.http.get(this.cardURL).subscribe(card => {\r\n      this.cardList = card;\r\n      console.log(this.cardList);\r\n    });\r\n  }\r\n\r\n  // // This function gets all the card data we need and push it to a new array\r\n  populateCardData(elixir){\r\n    this.elixirCardList = new Array<ElixirList>();\r\n    this.cardList.forEach(card=>{\r\n      if(card.elixirCost == elixir){\r\n        let cardList = new ElixirList;\r\n        cardList.card_name = card.card_name;\r\n        cardList.card_rarity = card.card_rarity;\r\n        cardList.card_type = card.card_type;\r\n        cardList.card_description = card.card_description;\r\n\r\n        this.elixirCardList.push(card);\r\n        }\r\n    });\r\n  }\r\n\r\n  // this function calls the getCardData function for when someone submits from the form\r\n  onSubmit(){\r\n    this.populateCardData(this.form.value.elixirValue);\r\n  }\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [BrowserModule, HttpModule, HttpClientModule, FormsModule, ReactiveFormsModule],\r\n  providers: [HttpClient],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class ElixirList{\r\n    card_name: string;\r\n    card_rarity: string;\r\n    card_type: string;\r\n    card_description: string;\r\n    elixirCost: number;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}